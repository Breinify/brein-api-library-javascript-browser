(()=>{if("object"==typeof Breinify&&!Breinify.plugins._isAdded("webExperiences")){let a=Breinify.UTL._jquery(),t={setup:function(i,e){console.log("using configuration",i),a.isFunction(e.ready)&&!a.isFunction(e.onChange)&&(e.onChange=e.ready,e.ready=null),a.isPlainObject(i.activationLogic)&&this.setupActivityLogic(i.activationLogic,e)},setupActivityLogic:function(i,e){let n=this,t=null;a.isFunction(e.isValidPage)&&(t=e.isValidPage),e.isValidPage=function(){return!0===n.checkActivityLogic(i)&&(null===t||!0===t.call(e))}},checkActivityLogic:function(i){var e=a.isArray(i.paths)?i.paths:[];for(let i=0;i<e.length;i++){var n=a.isPlainObject(e[i])?e[i]:{},t=Breinify.UTL.isNonEmptyString(n.type);if("ALL_PATHS"===t)return!0;var o=Breinify.UTL.isNonEmptyString(n.value);if(null===o)console.warn("found invalid value that was not or an empty string");else if("STATIC_PATHS"===t){if(o===window.location.pathname)return!0}else if("REGEX"===t){if(!0===new RegExp(t.value).test(window.location.pathname))return!0}else console.warn('found undefined path type "'+n+'" in the activation logic, skipping')}return!1}};Breinify.plugins._add("webExperiences",{bootstrap:function(i,e,n){"object"!=typeof n?console.error('the module with id "'+i+'" is not a valid module and cannot be setup'):!0!==Breinify.plugins._isAdded("trigger")?console.error('the trigger plugin is not available, skipping setup of the web-experiences with id "'+i+'"'):!0!==Breinify.plugins.api.isModule(i)&&(Breinify.plugins.trigger.init(),t.setup(e,n),Breinify.plugins.api.addModule(i,n))}})}})();