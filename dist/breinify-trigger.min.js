(()=>{if("object"==typeof Breinify&&!Breinify.plugins._isAdded("trigger")){let d=Breinify.UTL._jquery(),t={domTreeObserver:null,domTreeDependModules:null,oldPushState:null,oldReplaceState:null,popStateListener:null,urlChangeObservers:{},observeDomTreeChanges:function(){let l=this;null===this.domTreeObserver&&(this.domTreeObserver=new MutationObserver(n=>{for(let e=0;e<n.length;e++){var t=n[e],i=t.attributeName,r=n[e].addedNodes,a=n[e].removedNodes;"string"==typeof i&&""!==i.trim()&&l.handleDomChange(d(t.target),{type:"attribute-change",attribute:i});for(let e=0;e<r.length;e++){var o=r[e];l.handleDomChange(d(o),{type:"added-element"})}for(let e=0;e<a.length;e++){var s=a[e];l.handleDomChange(d(s),{type:"removed-element"})}}}),this.domTreeObserver.observe(d("body").get(0),{childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!1}))},addUrlChangeObserver:function(e,n){d.isFunction(n)&&(this.urlChangeObservers[e]=n)},removeUrlChangeObserver:function(e){delete this.urlChangeObservers[e]},observeUrlChanges:function(){let i=this;null===i.oldPushState&&null===i.oldReplaceState&&null===i.popStateListener&&("object"!=typeof window.history?console.error("unable to observe history changes, disabling trigger observation"):(this.handlePageChange(),d(document).on("module-added",function(e,n,t){try{i.checkModule(n,t)}catch(e){console.error("failed to check module: "+n)}}),d.isFunction(window.history.pushState)&&(i.oldPushState=window.history.pushState,window.history.pushState=function(){var e=i.oldPushState.apply(this,arguments);return window.dispatchEvent(new Event("pushstate")),i.handlePageChange(),e}),d.isFunction(window.history.replaceState)&&(i.oldReplaceState=window.history.replaceState,window.history.replaceState=function(){var e=i.oldReplaceState.apply(this,arguments);return window.dispatchEvent(new Event("replacestate")),i.handlePageChange(),e}),i.popStateListener=function(){i.handlePageChange()},window.addEventListener("popstate",i.popStateListener)))},handlePageChange:function(){let t=this;try{var e=Breinify.plugins.api,n=d.isPlainObject(e)?e.modules:{};t.domTreeDependModules={},d.each(n,function(n,e){try{t.checkModule(n,e)}catch(e){console.error("failed to check module: "+n)}})}catch(e){console.error("failed to trigger ready",e)}d.each(t.urlChangeObservers,function(e,n){n()})},handleDomChange:function(i,e){let r=this;if(d.isPlainObject(this.domTreeDependModules)){let t=d.isPlainObject(e)?d.extend(!0,{type:"undefined"},e):{};d.each(this.domTreeDependModules,function(e,n){r.executeOnChange(n,i,t)})}},checkModule:function(e,n){d.isPlainObject(n)&&d.isFunction(n.onChange)&&(d.isFunction(n.isValidPage)&&!n.isValidPage(window.location.pathname)||(d.isFunction(n.findRequirements)?void 0===this.domTreeDependModules[e]&&(this.executeOnChange(n,d("body"),{type:"full-scan"}),this.domTreeDependModules[e]=n):this.executeOnChange(n)))},executeOnChange:function(e,n,t){d.isPlainObject(e)&&d.isFunction(e.onChange)&&(d.isFunction(e.findRequirements)?null!==(n=e.findRequirements(n,t))&&!1!==n&&void 0!==n&&(d.isPlainObject(n)?e.onChange(n):n instanceof d&&0<n.length?e.onChange({$requirements:n}):!0===n&&e.onChange({})):e.onChange({}))}};let e=Breinify.plugins._add("trigger",{init:function(){t.observeDomTreeChanges(),t.observeUrlChanges()},addUrlChangeObserver:function(e,n){t.addUrlChangeObserver(e,n)},removeUrlChangeObserver:function(e){t.removeUrlChangeObserver(e)}});Breinify.onReady(function(){e.init()})}})();