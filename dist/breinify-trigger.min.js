(()=>{if("object"==typeof Breinify&&!Breinify.plugins._isAdded("trigger")){let d=Breinify.UTL._jquery(),n={domTreeObserver:null,domTreeDependModules:null,oldPushState:null,oldReplaceState:null,popStateListener:null,urlChangeObservers:{},observeDomTreeChanges:function(){let s=this;var e;null===this.domTreeObserver&&(this.domTreeObserver=new MutationObserver(t=>{for(let e=0;e<t.length;e++){var n,i=t[e],a=("attributes"===i.type&&"string"==typeof i.attributeName&&""!==i.attributeName.trim()&&null!==(n=i.target&&1===i.target.nodeType?d(i.target):null)&&1===n.length&&s.handleDomChange(n,{type:"attribute-change",attribute:i.attributeName}),i.addedNodes);if(a&&0<a.length)for(let e=0;e<a.length;e++){var r=a[e],r=r&&1===r.nodeType?d(r):null;null!==r&&1===r.length&&s.handleDomChange(r,{type:"added-element"})}var o=i.removedNodes;if(o&&0<o.length)for(let e=0;e<o.length;e++){var l=o[e],l=l&&1===l.nodeType?d(l):null;null!==l&&0<l.length&&s.handleDomChange(l,{type:"removed-element"})}}}),e=document.body||document.documentElement,this.domTreeObserver.observe(e,{childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!1}))},addUrlChangeObserver:function(e,t){d.isFunction(t)&&(this.urlChangeObservers[e]=t)},removeUrlChangeObserver:function(e){delete this.urlChangeObservers[e]},observeUrlChanges:function(){let i=this;null===i.oldPushState&&null===i.oldReplaceState&&null===i.popStateListener&&("object"!=typeof window.history?console.error("unable to observe history changes, disabling trigger observation"):(this.handlePageChange(),d(document).on("module-added",function(e,t,n){try{i.checkModule(t,n)}catch(e){console.error("failed to check module: "+t,e)}}),d.isFunction(window.history.pushState)&&(i.oldPushState=window.history.pushState,window.history.pushState=function(){var e=i.oldPushState.apply(this,arguments);return window.dispatchEvent(new Event("pushstate")),i.handlePageChange(),e}),d.isFunction(window.history.replaceState)&&(i.oldReplaceState=window.history.replaceState,window.history.replaceState=function(){var e=i.oldReplaceState.apply(this,arguments);return window.dispatchEvent(new Event("replacestate")),i.handlePageChange(),e}),i.popStateListener=function(){i.handlePageChange()},window.addEventListener("popstate",i.popStateListener)))},handlePageChange:function(){let n=this;try{var e=Breinify.plugins.api,t=d.isPlainObject(e)?e.modules:{};n.domTreeDependModules={},d.each(t,function(t,e){try{n.checkModule(t,e)}catch(e){console.error("failed to check module: "+t,e)}})}catch(e){console.error("failed to trigger ready",e)}d.each(n.urlChangeObservers,function(e,t){t()})},handleDomChange:function(i,e){let a=this;if(d.isPlainObject(this.domTreeDependModules)){let n=d.isPlainObject(e)?d.extend(!0,{type:"undefined"},e):{};d.each(this.domTreeDependModules,function(e,t){a.executeOnChange(t,i,n)})}},checkModule:function(e,t){d.isPlainObject(t)&&d.isFunction(t.onChange)&&(d.isFunction(t.isValidPage)&&!t.isValidPage(window.location.pathname)||(d.isFunction(t.findRequirements)?void 0===this.domTreeDependModules[e]&&(this.executeOnChange(t,d("body"),{type:"full-scan"}),this.domTreeDependModules[e]=t):this.executeOnChange(t)))},executeOnChange:function(e,t,n){d.isPlainObject(e)&&d.isFunction(e.onChange)&&(d.isFunction(e.findRequirements)?null!==(t=e.findRequirements(t,n))&&!1!==t&&void 0!==t&&(d.isPlainObject(t)?e.onChange(t):t instanceof d&&0<t.length?e.onChange({$requirements:t}):!0===t&&e.onChange({})):e.onChange({}))}};let e=Breinify.plugins._add("trigger",{init:function(){n.observeDomTreeChanges(),n.observeUrlChanges()},addUrlChangeObserver:function(e,t){n.addUrlChangeObserver(e,t)},removeUrlChangeObserver:function(e){n.removeUrlChangeObserver(e)}});Breinify.onReady(function(){e.init()})}})();