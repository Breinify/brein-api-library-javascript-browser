(()=>{if("object"==typeof Breinify&&!Breinify.plugins._isAdded("uiCountdown")){let o=Breinify.UTL._jquery();class e extends HTMLElement{$shadowRoot=null;settings=null;constructor(){super(),this.attachShadow({mode:"open"}),this.$shadowRoot=o(this.shadowRoot),this.settings={}}config(e,t,i){let n=this;i=o.isFunction(i)?i:()=>null;var s=Breinify.UTL.isNonEmptyString(e);null===s?i(new Error('the specified type "'+e+'" is invalid'),null):o.isPlainObject(t)?(e=function(e){null===e?i(null,n.settings):i(e,null)},"CAMPAIGN_BASED"===s?this.applyCampaignBasedSettings(t,e):"ONE_TIME"===s?this.applyOneTimeSettings(t,e):this.applyUnknownSettings(t,e)):i(new Error("settings must be a valid object"),null)}applyCampaignBasedSettings(e,i){let n=this;var t=Breinify.UTL.loc.param("br-msid");null!==t&&(this.settings=o.extend(!0,{experience:{},type:"CAMPAIGN_BASED"},e),null===(e=Breinify.UTL.isNonEmptyString(this.settings.experience.accessToken))?i(new Error("the needed accessToken is missing"),null):Breinify.UTL.internal.token(e,{msid:t},function(e,t){null!==e?i(e,!1):n.checkCampaignBasedResponse(t)&&i(null,n.settings)},3e4))}checkCampaignBasedResponse(e){var t,i;return!(!o.isPlainObject(e)||(t=e["com.brein.common.microservice.data.CampaignData"],t=o.isArray(t)&&0<t.length?t[0]:null,e=e["com.brein.common.microservice.data.PromotionsData"],e=o.isArray(e)&&0<e.length?e[0]:null,!o.isPlainObject(t))||!o.isPlainObject(e)||(t=Breinify.UTL.isNonEmptyString(t.campaignType),null!==(i=o.isArray(this.settings.experience.campaignTypes)?this.settings.experience.campaignTypes:null)&&-1===o.inArray(t,i))||(this.settings.experience=o.extend(!0,{},this.settings.experience,e),0))}applyOneTimeSettings(e,t){this.settings=o.extend(!0,{experience:{},type:"ONE_TIME"},e),t(null,this.settings)}applyUnknownSettings(e,t){this.settings=o.extend(!0,{experience:{},type:"UNKNOWN"},e),t(null,this.settings)}render(){this.$shadowRoot.prepend('<style id="br-countdown-default">:host { --unit-height: 60px; --color-background: #1d273b; --color-foreground: #f2f2f2; --color-separator: rgba(255, 255, 255, 0.3); }.countdown-banner { background-color: var(--color-background); color: var(--color-foreground); text-align: center; padding: 10px 0; }.countdown-title { font-size: calc(var(--unit-height) * 0.25); letter-spacing: 1px; margin-bottom: 5px; text-transform: uppercase }.countdown-timer { display: flex; justify-content: center; align-items: stretch; gap: 12px; height: var(--unit-height); }.countdown-disclaimer { padding: calc(var(--unit-height) * 0.1) 0; font-size: calc(var(--unit-height) * 0.18); pointer-events: none; }.time-block { position: relative; flex: 0 0 auto; aspect-ratio: 1.5 / 1; display: flex; flex-direction: column; justify-content: center; align-items: center; background: transparent; }.time-value { font-size: calc(var(--unit-height) * 0.6); font-weight: bold; line-height: 1; }.time-label { font-size: calc(var(--unit-height) * 0.18); margin-top: 3px; text-transform: uppercase; }.separator { width: 1px; background-color: var(--color-separator); height: 70%; align-self: center; }.countdown-timer.loading .time-value, .countdown-timer.loading .time-label { opacity: 0; }.skeleton { display: none; position: absolute; top: 0; left: 0; width: 100%; height: 100%; background: linear-gradient(180deg, #ffffff22 25%, #ffffff10 50%, #ffffff22 75%); background-size: 100% 200%; animation: shimmer 4s linear infinite; z-index: 1; border-radius: 4px; }\n.countdown-timer.loading .skeleton { display: block; }@keyframes shimmer { 0% { background-position: 0 200%; } 100% { background-position: 0 -200%; } }@media (max-width: 500px) { :host { --unit-height: 40px; } }</style>'),this.$shadowRoot.append('<div style="display:none" class="countdown-banner">  <div class="countdown-title"></div>  <div class="countdown-timer loading">    <div class="time-block">      <div class="skeleton"></div><div class="time-value time-days">00</div><div class="time-label">Days</div>    </div>    <div class="separator"></div>    <div class="time-block">      <div class="skeleton"></div><div class="time-value time-hours">00</div><div class="time-label">Hours</div>    </div>    <div class="separator"></div>    <div class="time-block">      <div class="skeleton"></div><div class="time-value time-minutes">00</div><div class="time-label">Minutes</div>    </div>    <div class="separator"></div>    <div class="time-block">      <div class="skeleton"></div><div class="time-value time-seconds">00</div><div class="time-label">Seconds</div>    </div>  </div>  <div class="countdown-disclaimer"></div></div>');var e=Breinify.UTL.isNonEmptyString(this.settings.experience.message),t=this.$shadowRoot.find(".countdown-title"),t=(null===e?t.hide():t.text(e).show(),Breinify.UTL.isNonEmptyString(this.settings.experience.disclaimer)),e=this.$shadowRoot.find(".countdown-disclaimer");null==t?e.hide():e.text(t).show(),"CAMPAIGN_BASED"===this.settings.type?this.handleCampaignBased():"ONE_TIME"===this.settings.type?this.handleOneTime():this.handleUnknown()}handleCampaignBased(){let e=this;setTimeout(()=>{e.startCounter()},2e3)}handleOneTime(){this.startCounter()}handleUnknown(){this.$shadowRoot.find(".countdown-banner").hide()}startCounter(){let e=this;this.updateCountdown()&&(this.hideLoading(),this.interval=setInterval(()=>{e.updateCountdown()||(clearInterval(e.interval),e.$shadowRoot.find(".countdown-banner").fadeOut())},1e3))}showLoading(){this.$shadowRoot.find(".countdown-timer").addClass("loading")}hideLoading(){this.$shadowRoot.find(".countdown-timer").removeClass("loading")}updateCountdown(){var e,t,i=this.$shadowRoot.find(".countdown-banner"),n=this.now(),s=this.getStartTime();return null===s||n<s?(i.hide(),!0):(s=Math.max(0,this.settings.experience.endTime-n),n=Math.floor(s)%60,e=Math.floor(s/60)%60,t=Math.floor(s/3600)%24,s=Math.floor(s/86400),this.$shadowRoot.find(".time-days").text(this.pad(s)),this.$shadowRoot.find(".time-hours").text(this.pad(t)),this.$shadowRoot.find(".time-minutes").text(this.pad(e)),this.$shadowRoot.find(".time-seconds").text(this.pad(n)),(0<n||0<e||0<t||0<s)&&(i.is(":visible")||i.fadeIn(),!0))}pad(e){return String(e).padStart(2,"0")}getStartTime(){return Breinify.UTL.toInteger(this.settings.experience.startTime)}getEndTime(){return Breinify.UTL.toInteger(this.settings.experience.endTime)}now(){return Math.floor(Date.now()/1e3)}}Breinify.plugins._add("uiCountdown",{register:function(){window.customElements.get("br-ui-countdown")||window.customElements.define("br-ui-countdown",e)}})}})();