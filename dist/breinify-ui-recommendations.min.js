(()=>{if("object"==typeof Breinify&&!Breinify.plugins._isAdded("uiRecommendations")){let r=Breinify.UTL._jquery(),l=["before","after","prepend","append","replace","externalRender"],i={handle:async function(e,n){r.isPlainObject(n)&&(await this._createPayload(n.recommender),this._createActivitySettings(n),this._createSplitTestsSettings(n.splitTestControl),this._createPosition(n.position),this._createPlaceholders(n.placeholders),this._createTemplates(n.templates))},_createPosition:function(e){if(!r.isPlainObject(e))return null;let n=Breinify.UTL.isNonEmptyString(e.operation);if(null===n)return null;if(n=n.toLowerCase(),-1===l.indexOf(n))return null;let i=Breinify.UTL.isNonEmptyString(e.selector);e=Breinify.UTL.isNonEmptyString(e.snippet);let t=null;return(null!==i||null!==e)&&(t=null!==i?function(){return r(i)}:Breinify.plugins.snippetManager.getSnippet(containerSnippetId),r.isFunction(t))?{[n]:t}:null},_createTemplates:function(e){var n;return r.isPlainObject(e)?(n=Breinify.UTL.isNonEmptyString(e.container),e=Breinify.UTL.isNonEmptyString(e.item),{container:Breinify.plugins.snippetManager.getSnippet(n),item:Breinify.plugins.snippetManager.getSnippet(e)}):null},_createSplitTestsSettings:function(e){return!r.isPlainObject(e)||null===(e=Breinify.UTL.isNonEmptyString(e.selector))?null:{control:{containerSelector:e}}},_createPlaceholders:function(e){return r.isPlainObject(e)?Object.fromEntries(Object.entries(e).map(([e,n])=>[e,Breinify.plugins.snippetManager.getSnippet(n)])):null},_createActivitySettings:function(e){e=r.isPlainObject(e)?Breinify.UTL.isNonEmptyString(e.activityType):null;return{type:null===e?"clickedRecommendation":e}},_createPayload:async function(e){var n;return r.isPlainObject(e)?(n=Breinify.UTL.isNonEmptyString(e.preconfiguredRecommendation),{payload:{recommendationQueryName:e=null===(e=Breinify.UTL.isNonEmptyString(e.queryLabel))?n:e,namedRecommendations:[n]}}):null}};Breinify.plugins._add("uiRecommendations",{register:function(){},handle:function(n,e){(r.isArray(e.recommendations)?e.recommendations:[]).forEach(function(e){Promise.resolve().then(()=>i.handle(n,e)).catch(e=>{})})}})}})();